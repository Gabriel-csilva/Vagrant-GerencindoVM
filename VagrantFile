#criado para praticar as aulas do curso de Vagrant - gerenciando máquinas virtuais da alura

$script_mysql = <<-SCRIPT
  apt-get update && \
  apt-get install -y mysql-server-5.7 && \
  mysql -e "create user 'phpuser'@'%' identified by 'pass';"
SCRIPT


#utilizado para validar a conexão via DHCP
class VagrantPlugins::ProviderVirtualBox::Action::Network
    def dhcp_server_matches_config?(dhcp_server, config)
      true
    end
  end

Vagrant.configure("2") do |config|
  config.vm.box = "ubuntu/bionic64"
  #Definindo as configurações da VM
  config.vm.provider "virtualbox" do |vb|
    vb.memory = 512
    vb.cpus = 2
  end

=begin
    config.vm.define "mysqldb" do |mysql|
    #mysql.vm.network "forwarded_port", guest: 80, host: 8089
    #mysql.vm.network "private_network", ip: "192.168.50.4"
    #mysql.vm.network "private_network", type: "dhcp"
    #mysql.vm.network "public_network"
    mysql.vm.network "public_network",
    use_dhcp_assigned_default_route: true

    mysql.vm.provision "shell", 
        inline: "cat /configs/id_bionic.pub >> .ssh/authorized_keys"
        mysql.vm.provision "shell", 
        inline: $script_mysql
        mysql.vm.provision "shell", 
        inline: "cat /configs/mysqld.cnf > /etc/mysql/mysql.conf.d/mysqld.cnf"
        mysql.vm.provision "shell", 
        inline: "service mysql restart"
        mysql.vm.synced_folder "./configs", "/configs"
        mysql.vm.synced_folder ".", "/vagrant", disabled: true
      end
=end

    config.vm.define "phpweb" do |phpweb|
      phpweb.vm.network "forwarded_port", guest: 8888, host: 8888
      #phpweb.vm.network "public_network", ip: "192.168.1.25"
      phpweb.vm.network "public_network",
      use_dhcp_assigned_default_route: true

      #Definindo as configurações da VM
      phpweb.vm.provider "virtualbox" do |vb|
        vb.memory = 1024
        vb.cpus = 2
        vb.name = "PhpWeb"
      end

      phpweb.vm.provision "shell",
        inline: "apt-get update && apt-get install -y puppet"

      phpweb.vm.provision "puppet" do |puppet|
        puppet.manifests_path = "./configs/manifest"
        puppet.manifest_file = "phpweb.pp"
      end
    end

    config.vm.define "mysqlserver" do |mysqlserver|
      #mysqlserver.vm.network "public_network", ip: "192.168.1.22"
      mysqlserver.vm.network "public_network",
      use_dhcp_assigned_default_route: true

      mysqlserver.vm.provision "shell",
        inline: "cat /vagrant/configs/id_bionic.pub >> .ssh/authorized_keys"
    end

    config.vm.define "ansible" do |ansible|
      #ansible.vm.network "public_network", ip: "192.168.1.26"
      ansible.vm.network "public_network",
      use_dhcp_assigned_default_route: true

      ansible.vm.provision "shell",
        inline: "cp /vagrant/id_bionic  /home/vagrant && \
                chmod 600 /home/vagrant/id_bionic && \
                chown vagrant:vagrant /home/vagrant/id_bionic"

      ansible.vm.provision "shell",
        inline: "apt-get update && \
                apt-get install -y software-properties-common && \
                apt-add-repository --yes --update ppa:ansible/ansible && \
                apt-get install -y ansible"

      ansible.vm.provision "shell",
        inline: "ansible-playbook -i /vagrant/configs/ansible/hosts \
                    /vagrant/configs/ansible/playbook.yml"
    end

    config.vm.define "memcached" do |memcached|
      memcached.vm.box = "centos/7"

      #memcached.vm.network "public_network", ip: "192.168.1.25"
      memcached.vm.network "public_network",
      use_dhcp_assigned_default_route: true

      #Definindo as configurações da VM
      memcached.vm.provider "virtualbox" do |vb|
        vb.memory = 512
        vb.cpus = 1
        vb.name = "centos7_memcached"
    end
  end


    config.vm.define "dockerhost" do |dockerhost|
      #dockerhost.vm.network "public_network", ip: "192.168.1.25"
      dockerhost.vm.network "public_network",
      use_dhcp_assigned_default_route: true

      #Definindo as configurações da VM
      dockerhost.vm.provider "virtualbox" do |vb|
        vb.memory = 512
        vb.cpus = 1
        vb.name = "ubuntu_dockerhost"

      dockerhost.vm.provision "shell",
        inline: "apt-get update && apt-get install -y docker.io"
    end
  end
end